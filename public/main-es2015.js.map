{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/cases-add/cases-add.component.ts","./src/app/components/cases-add/cases-add.component.html","./src/app/components/cases-details/cases-details.component.ts","./src/app/components/cases-details/cases-details.component.html","./src/app/components/cases-edit/cases-edit.component.ts","./src/app/components/cases-edit/cases-edit.component.html","./src/app/components/cases/cases.component.ts","./src/app/components/cases/cases.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/case-api.service.ts","./src/app/services/validate.service.ts","./src/app/shared/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CasesComponent } from './components/cases/cases.component';\nimport { CasesAddComponent } from './components/cases-add/cases-add.component';\nimport { CasesEditComponent } from './components/cases-edit/cases-edit.component';\nimport { CasesDetailsComponent } from './components/cases-details/cases-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'cases',\n    component: CasesComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'cases-add',\n    component: CasesAddComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'cases-edit/:id',\n    component: CasesEditComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'cases-details/:id',\n    component: CasesDetailsComponent,\n    data: { title: 'Case Details' },\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CasesComponent } from './components/cases/cases.component';\nimport { CasesAddComponent } from './components/cases-add/cases-add.component';\nimport { CasesDetailsComponent } from './components/cases-details/cases-details.component';\nimport { CasesEditComponent } from './components/cases-edit/cases-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    DashboardComponent,\n    CasesComponent,\n    CasesAddComponent,\n    CasesDetailsComponent,\n    CasesEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    LayoutModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('id_token')\n        }\n      }\n    })\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CaseApiService } from '../../services/case-api.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-cases-add',\n  templateUrl: './cases-add.component.html',\n  styleUrls: ['./cases-add.component.scss']\n})\nexport class CasesAddComponent implements OnInit {\n\n  casesForm: FormGroup;\n  first_name: '';\n  last_name: '';\n  age: number = null;\n  gender: '';\n  genderList = ['Male', 'Female'];\n  countryList = [\n    'Afghanistan',\n    'Albania',\n    'Algeria',\n    'Aland Islands',\n    'American Samoa',\n    'Anguilla',\n    'Andorra',\n    'Angola',\n    'Antilles - Netherlands ',\n    'Antigua and Barbuda',\n    'Antarctica',\n    'Argentina',\n    'Armenia',\n    'Australia',\n    'Austria',\n    'Aruba',\n    'Azerbaijan',\n    'Bosnia and Herzegovina',\n    'Barbados',\n    'Bangladesh',\n    'Belgium',\n    'Burkina Faso',\n    'Bulgaria',\n    'Bahrain',\n    'Burundi',\n    'Benin',\n    'Bermuda',\n    'Brunei Darussalam',\n    'Bolivia',\n    'Brazil',\n    'Bahamas',\n    'Bhutan',\n    'Bouvet Island',\n    'Botswana',\n    'Belarus',\n    'Belize',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cape Verde',\n    'Central African Republic',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands',\n    'Colombia',\n    'Congo',\n    'Cote D\\'Ivoire (Ivory Coast)',\n    'Cook Islands',\n    'Costa Rica',\n    'Croatia (Hrvatska)',\n    'Cuba',\n    'Cyprus',\n    'Czech Republic',\n    'Democratic Republic of the Congo',\n    'Djibouti',\n    'Denmark',\n    'Dominica',\n    'Dominican Republic',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'East Timor',\n    'Estonia',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Ethiopia',\n    'Finland',\n    'Fiji',\n    'Falkland Islands (Malvinas)',\n    'Federated States of Micronesia',\n    'Faroe Islands',\n    'France',\n    'France, Metropolitan',\n    'French Guiana',\n    'French Polynesia',\n    'Gabon',\n    'Gambia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Great Britain (UK)',\n    'Grenada',\n    'Georgia',\n    'Greece',\n    'Greenland',\n    'Guinea',\n    'Guadeloupe',\n    'S. Georgia and S. Sandwich Islands',\n    'Guatemala',\n    'Guam',\n    'Guinea-Bissau',\n    'Guyana',\n    'Hong Kong',\n    'Heard Island and McDonald Islands',\n    'Honduras',\n    'Haiti',\n    'Hungary',\n    'Indonesia',\n    'Ireland',\n    'Israel',\n    'India',\n    'British Indian Ocean Territory',\n    'Iraq',\n    'Iran',\n    'Italy',\n    'Jamaica',\n    'Jordan',\n    'Japan',\n    'Kenya',\n    'Kyrgyzstan',\n    'Kiribati',\n    'Comoros',\n    'Saint Kitts and Nevis',\n    'Korea (North)',\n    'Korea (South)',\n    'Kuwait',\n    'Cayman Islands',\n    'Kazakhstan',\n    'Laos',\n    'Lebanon',\n    'Saint Lucia',\n    'Liechtenstein',\n    'Sri Lanka',\n    'Liberia',\n    'Lesotho',\n    'Lithuania',\n    'Luxembourg',\n    'Latvia',\n    'Libya',\n    'Macedonia',\n    'Macao',\n    'Madagascar',\n    'Malaysia',\n    'Mali',\n    'Malawi',\n    'Mauritania',\n    'Marshall Islands',\n    'Martinique',\n    'Mauritius',\n    'Mayotte',\n    'Malta',\n    'Mexico',\n    'Morocco',\n    'Monaco',\n    'Moldova',\n    'Mongolia',\n    'Myanmar',\n    'Northern Mariana Islands',\n    'Montserrat',\n    'Maldives',\n    'Mozambique',\n    'Namibia',\n    'New Caledonia',\n    'Niger',\n    'Norfolk Island',\n    'Nigeria',\n    'Nicaragua',\n    'Netherlands',\n    'Norway',\n    'Nepal',\n    'Nauru',\n    'Niue',\n    'New Zealand (Aotearoa)',\n    'Oman',\n    'Panama',\n    'Peru',\n    'Papua New Guinea',\n    'Philippines',\n    'Pakistan',\n    'Poland',\n    'Saint Pierre and Miquelon',\n    'Serbia and Montenegro',\n    'Pitcairn',\n    'Puerto Rico',\n    'Palestinian Territory',\n    'Portugal',\n    'Palau',\n    'Paraguay',\n    'Qatar',\n    'Reunion',\n    'Romania',\n    'Russian Federation',\n    'Rwanda',\n    'Saudi Arabia',\n    'Samoa',\n    'Saint Helena',\n    'Saint Vincent and the Grenadines',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Senegal',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'Spain',\n    'Sudan',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Sweden',\n    'Switzerland',\n    'Syria',\n    'USSR (former)',\n    'Swaziland',\n    'Taiwan',\n    'Tanzania',\n    'Tajikistan',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands',\n    'Tuvalu',\n    'Ukraine',\n    'Uganda',\n    'United Arab Emirates',\n    'United Kingdom',\n    'United States',\n    'United States Minor Outlying Islands',\n    'Uruguay',\n    'Uzbekistan',\n    'Vanuatu',\n    'Vatican City State',\n    'Venezuela',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Viet Nam',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Yugoslavia (former)',\n    'Zambia',\n    'Zaire (former)',\n    'Zimbabwe'\n  ];\n  statusList = ['Positive', 'Dead', 'Recovered'];\n  email: '';\n  //country: '';\n  status: '';\n  isLoadingResults = false;\n  matcher = new MyErrorStateMatcher();\n  data = [];\n\n  constructor(private router: Router, private api: CaseApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    // this.api.getCases()\n    // .subscribe((res: any) => {\n    //   this.data = res;\n    //   console.log(this.data);\n    //   this.isLoadingResults = false;\n    // }, err => {\n    //   console.log(err);\n    //   this.isLoadingResults = false;\n    // });\n\n    this.casesForm = this.formBuilder.group({\n      first_name : [null, Validators.required],\n      last_name : [null, Validators.required],\n      age : [null, Validators.required],\n      gender : [null, Validators.required],\n      email : [null, Validators.required],\n      country : [null, Validators.required],\n      status : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit() {\n    this.isLoadingResults = true;\n    this.api.addCase(this.casesForm.value)\n      .subscribe((res: any) => {\n        const id = res._id;\n        this.isLoadingResults = false;\n        this.router.navigate(['/cases-details', id])\n      }, (err: any) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      })\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <h2>Add Case</h2>\n  <div class=\"example-loading-shade\"\n        *ngIf=\"isLoadingResults\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n  </div>\n  <div class=\"button-row\">\n    <a mat-flat-button color=\"primary\" [routerLink]=\"['/cases']\"><mat-icon>list</mat-icon></a>\n  </div>\n  <mat-card class=\"example-card\">\n    <form [formGroup]=\"casesForm\" (ngSubmit)=\"onFormSubmit()\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>First Name</mat-label>\n        <input matInput placeholder=\"First Name\" formControlName=\"first_name\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('first_name').valid && casesForm.get('first_name').touched\">Please enter a First Name</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" formControlName=\"last_name\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('last_name').valid && casesForm.get('last_name').touched\">Please enter a Last Name</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Gender</mat-label>\n        <mat-select formControlName=\"gender\">\n          <mat-option *ngFor=\"let gl of genderList\" [value]=\"gl\">\n            {{gl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('gender').valid && casesForm.get('gender').touched\">Please choose Gender</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Age</mat-label>\n        <input matInput type=\"number\" placeholder=\"Age\" formControlName=\"age\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('age').valid && casesForm.get('age').touched\">Please enter Age</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Email\" formControlName=\"email\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('email').valid && casesForm.get('email').touched\">Please enter Email</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Country</mat-label>\n        <mat-select formControlName=\"country\">\n          <mat-option *ngFor=\"let cl of countryList\" [value]=\"cl\">\n            {{cl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('country').valid && casesForm.get('country').touched\">Please enter Country</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option *ngFor=\"let sl of statusList\" [value]=\"sl\">\n            {{sl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('status').valid && casesForm.get('status').touched\">Please select Status</span>\n        </mat-error>\n      </mat-form-field>\n      <div class=\"button-row\">\n        <button type=\"submit\" [disabled]=\"!casesForm.valid\" mat-flat-button color=\"primary\"><mat-icon>save</mat-icon></button>\n      </div>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CaseApiService } from '../../services/case-api.service';\nimport { Cases } from '../../cases';\n\n@Component({\n  selector: 'app-cases-details',\n  templateUrl: './cases-details.component.html',\n  styleUrls: ['./cases-details.component.scss']\n})\nexport class CasesDetailsComponent implements OnInit {\n  cases: Cases = { _id: '', first_name: '', last_name: '', gender: '', age: null, email:'', country: '', status: '', updated: null };\n  isLoadingResults = false;\n\n  constructor(private route: ActivatedRoute, private router: Router, private api: CaseApiService) { }\n\n  ngOnInit(): void {\n    this.getCasesDetails(this.route.snapshot.params.id);\n  }\n\n  getCasesDetails(id: string) {\n    this.api.getCase(id)\n      .subscribe((data: any) => {\n        this.cases = data;\n        console.log(this.cases);\n        this.isLoadingResults = false;\n      });\n  }\n\n  deleteCases(id: any) {\n    this.isLoadingResults = true;\n    this.api.deleteCase(id)\n      .subscribe(res => {\n        this.isLoadingResults = false;\n        this.router.navigate(['/cases']);\n      }, (err) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      }\n    );\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <h2>Corona Virus Cases Details</h2>\n  <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n  </div>\n  <div class=\"button-row\">\n    <a mat-flat-button color=\"primary\" [routerLink]=\"['/cases']\"><mat-icon>list</mat-icon></a>\n  </div>\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title><h2>{{ cases.first_name }}</h2></mat-card-title>\n      <mat-card-title><h2>{{ cases.last_name }}</h2></mat-card-title>\n      <mat-card-subtitle>{{ cases.age }} years old</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <dl>\n        <dt>Gender:</dt>\n        <dd>{{ cases.gender }}</dd>\n        <dt>Email:</dt>\n        <dd>{{ cases.email }}</dd>\n        <dt>City:</dt>\n        <dd>{{ cases.country }}</dd>\n        <dt>Status</dt>\n        <dd>{{ cases.status }}</dd>\n      </dl>\n    </mat-card-content>\n    <mat-card-actions>\n      <a mat-flat-button color=\"primary\" [routerLink]=\"['/cases-edit', cases._id]\"><mat-icon>edit</mat-icon>Edit</a>\n      <a mat-flat-button color=\"warn\" (click)=\"deleteCases(cases._id)\"><mat-icon>delete</mat-icon> Delete</a>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CaseApiService } from '../../services/case-api.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-cases-edit',\n  templateUrl: './cases-edit.component.html',\n  styleUrls: ['./cases-edit.component.scss']\n})\nexport class CasesEditComponent implements OnInit {\n  casesForm: FormGroup;\n  _id = '';\n  first_name = '';\n  last_name = '';\n  gender = '';\n  age: number = null;\n  email = '';\n  country = '';\n  status = '';\n  statusList = ['Positive', 'Dead', 'Recovered'];\n  genderList = ['Male', 'Female'];\n  countryList = [\n    'Afghanistan',\n    'Albania',\n    'Algeria',\n    'Aland Islands',\n    'American Samoa',\n    'Anguilla',\n    'Andorra',\n    'Angola',\n    'Antilles - Netherlands ',\n    'Antigua and Barbuda',\n    'Antarctica',\n    'Argentina',\n    'Armenia',\n    'Australia',\n    'Austria',\n    'Aruba',\n    'Azerbaijan',\n    'Bosnia and Herzegovina',\n    'Barbados',\n    'Bangladesh',\n    'Belgium',\n    'Burkina Faso',\n    'Bulgaria',\n    'Bahrain',\n    'Burundi',\n    'Benin',\n    'Bermuda',\n    'Brunei Darussalam',\n    'Bolivia',\n    'Brazil',\n    'Bahamas',\n    'Bhutan',\n    'Bouvet Island',\n    'Botswana',\n    'Belarus',\n    'Belize',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cape Verde',\n    'Central African Republic',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands',\n    'Colombia',\n    'Congo',\n    'Cote D\\'Ivoire (Ivory Coast)',\n    'Cook Islands',\n    'Costa Rica',\n    'Croatia (Hrvatska)',\n    'Cuba',\n    'Cyprus',\n    'Czech Republic',\n    'Democratic Republic of the Congo',\n    'Djibouti',\n    'Denmark',\n    'Dominica',\n    'Dominican Republic',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'East Timor',\n    'Estonia',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Ethiopia',\n    'Finland',\n    'Fiji',\n    'Falkland Islands (Malvinas)',\n    'Federated States of Micronesia',\n    'Faroe Islands',\n    'France',\n    'France, Metropolitan',\n    'French Guiana',\n    'French Polynesia',\n    'Gabon',\n    'Gambia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Great Britain (UK)',\n    'Grenada',\n    'Georgia',\n    'Greece',\n    'Greenland',\n    'Guinea',\n    'Guadeloupe',\n    'S. Georgia and S. Sandwich Islands',\n    'Guatemala',\n    'Guam',\n    'Guinea-Bissau',\n    'Guyana',\n    'Hong Kong',\n    'Heard Island and McDonald Islands',\n    'Honduras',\n    'Haiti',\n    'Hungary',\n    'Indonesia',\n    'Ireland',\n    'Israel',\n    'India',\n    'British Indian Ocean Territory',\n    'Iraq',\n    'Iran',\n    'Italy',\n    'Jamaica',\n    'Jordan',\n    'Japan',\n    'Kenya',\n    'Kyrgyzstan',\n    'Kiribati',\n    'Comoros',\n    'Saint Kitts and Nevis',\n    'Korea (North)',\n    'Korea (South)',\n    'Kuwait',\n    'Cayman Islands',\n    'Kazakhstan',\n    'Laos',\n    'Lebanon',\n    'Saint Lucia',\n    'Liechtenstein',\n    'Sri Lanka',\n    'Liberia',\n    'Lesotho',\n    'Lithuania',\n    'Luxembourg',\n    'Latvia',\n    'Libya',\n    'Macedonia',\n    'Macao',\n    'Madagascar',\n    'Malaysia',\n    'Mali',\n    'Malawi',\n    'Mauritania',\n    'Marshall Islands',\n    'Martinique',\n    'Mauritius',\n    'Mayotte',\n    'Malta',\n    'Mexico',\n    'Morocco',\n    'Monaco',\n    'Moldova',\n    'Mongolia',\n    'Myanmar',\n    'Northern Mariana Islands',\n    'Montserrat',\n    'Maldives',\n    'Mozambique',\n    'Namibia',\n    'New Caledonia',\n    'Niger',\n    'Norfolk Island',\n    'Nigeria',\n    'Nicaragua',\n    'Netherlands',\n    'Norway',\n    'Nepal',\n    'Nauru',\n    'Niue',\n    'New Zealand (Aotearoa)',\n    'Oman',\n    'Panama',\n    'Peru',\n    'Papua New Guinea',\n    'Philippines',\n    'Pakistan',\n    'Poland',\n    'Saint Pierre and Miquelon',\n    'Serbia and Montenegro',\n    'Pitcairn',\n    'Puerto Rico',\n    'Palestinian Territory',\n    'Portugal',\n    'Palau',\n    'Paraguay',\n    'Qatar',\n    'Reunion',\n    'Romania',\n    'Russian Federation',\n    'Rwanda',\n    'Saudi Arabia',\n    'Samoa',\n    'Saint Helena',\n    'Saint Vincent and the Grenadines',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Senegal',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'Spain',\n    'Sudan',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Sweden',\n    'Switzerland',\n    'Syria',\n    'USSR (former)',\n    'Swaziland',\n    'Taiwan',\n    'Tanzania',\n    'Tajikistan',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands',\n    'Tuvalu',\n    'Ukraine',\n    'Uganda',\n    'United Arab Emirates',\n    'United Kingdom',\n    'United States',\n    'United States Minor Outlying Islands',\n    'Uruguay',\n    'Uzbekistan',\n    'Vanuatu',\n    'Vatican City State',\n    'Venezuela',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Viet Nam',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Yugoslavia (former)',\n    'Zambia',\n    'Zaire (former)',\n    'Zimbabwe'\n  ];\n  isLoadingResults = false;\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: CaseApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.getCaseById(this.route.snapshot.params.id);\n    this.casesForm = this.formBuilder.group({\n      first_name : [null, Validators.required],\n      last_name : [null, Validators.required],\n      gender : [null, Validators.required],\n      age : [null, Validators.required],\n      email : [null, Validators.required],\n      country : [null, Validators.required],\n      status : [null, Validators.required]\n    });\n  }\n\n  getCaseById(id: any) {\n    this.api.getCase(id).subscribe((data: any) => {\n      this._id = data._id;\n      this.casesForm.setValue({\n        first_name: data.first_name,\n        last_name: data.last_name,\n        gender: data.gender,\n        age: data.age,\n        email: data.email,\n        country: data.country,\n        status: data.status\n      });\n    });\n  }\n\n  onFormSubmit() {\n    this.isLoadingResults = true;\n    this.api.updateCase(this._id, this.casesForm.value)\n      .subscribe((res: any) => {\n          const id = res._id;\n          this.isLoadingResults = false;\n          this.router.navigate(['/cases-details', id]);\n        }, (err: any) => {\n          console.log(err);\n          this.isLoadingResults = false;\n        }\n      );\n  }\n\n  casesDetails() {\n    this.router.navigate(['/cases-details', this._id]);\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <h2>Coronavirus Edit Cases</h2>\n  <div class=\"example-loading-shade\"\n        *ngIf=\"isLoadingResults\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n  </div>\n  <div class=\"button-row\">\n      <a mat-flat-button color=\"primary\" (click)=\"casesDetails()\"><mat-icon>info</mat-icon></a>\n  </div>\n  <mat-card class=\"example-card\">\n    <form [formGroup]=\"casesForm\" (ngSubmit)=\"onFormSubmit()\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>First Name</mat-label>\n        <input matInput placeholder=\"First Name\" formControlName=\"first_name\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('first_name').valid && casesForm.get('first_name').touched\">Please enter First Name</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Last Name</mat-label>\n        <input matInput placeholder=\"Last Name\" formControlName=\"last_name\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('last_name').valid && casesForm.get('last_name').touched\">Please enter Last Name</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Gender</mat-label>\n        <mat-select formControlName=\"gender\">\n          <mat-option *ngFor=\"let gl of genderList\" [value]=\"gl\">\n            {{gl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('gender').valid && casesForm.get('gender').touched\">Please choose Gender</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Age</mat-label>\n        <input matInput type=\"number\" placeholder=\"Age\" formControlName=\"age\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('age').valid && casesForm.get('age').touched\">Please enter Age</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Email\" formControlName=\"email\"\n                [errorStateMatcher]=\"matcher\">\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('email').valid && casesForm.get('email').touched\">Please enter Address</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Country</mat-label>\n        <mat-select formControlName=\"country\">\n          <mat-option *ngFor=\"let cl of countryList\" [value]=\"cl\">\n            {{cl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('status').valid && casesForm.get('status').touched\">Please select Status</span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option *ngFor=\"let sl of statusList\" [value]=\"sl\">\n            {{sl}}\n          </mat-option>\n        </mat-select>\n        <mat-error>\n          <span *ngIf=\"!casesForm.get('status').valid && casesForm.get('status').touched\">Please select Status</span>\n        </mat-error>\n      </mat-form-field>\n      <div class=\"button-row\">\n        <button type=\"submit\" [disabled]=\"!casesForm.valid\" mat-flat-button color=\"primary\"><mat-icon>save</mat-icon></button>\n      </div>\n    </form>\n  </mat-card>\n</div>\n\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { CasesDataSource, CasesItem } from './cases-datasource';\nimport { CaseApiService } from '../../services/case-api.service';\nimport { Cases } from '../../cases';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-cases',\n  templateUrl: './cases.component.html',\n  styleUrls: ['./cases.component.scss']\n})\nexport class CasesComponent implements OnInit {\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['_id', 'first_name', 'last_name', 'gender', 'age', 'email', 'country', 'status', 'actions'];\n  data: Cases[] = [];\n  isLoadingResults = true;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  // @ViewChild(MatTable) table: MatTable<CasesItem>;\n  //dataSource: CasesDataSource;\n  @ViewChild(MatTable) table: MatTable<Cases>;\n  //dataSource: CaseApiService;\n  // isLoadingResults = true;\n\n  constructor(private route: ActivatedRoute, private router: Router, private api: CaseApiService,private httpClient:HttpClient) { }\n\n  ngOnInit() {\n    this.api.getCases()\n    .subscribe((res: any) => {\n      this.data = res;\n      console.log(this.data);\n      this.isLoadingResults = false;\n    }, err => {\n      console.log(err);\n      this.isLoadingResults = false;\n    });\n    //this.dataSource = new CasesDataSource();\n    //this.dataSource = new CaseApiService();\n  }\n\n  deleteCases(id: any) {\n    this.isLoadingResults = true;\n    this.api.deleteCase(id)\n      .subscribe(res => {\n        this.isLoadingResults = false;\n        this.router.navigate(['/cases']);\n      }, (err) => {\n        console.log(err);\n        this.isLoadingResults = false;\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    console.log('paginator')\n  }\n\n  onRowClicked(row) {\n    console.log('Row clicked: ', row);\n  }\n}\n","<div class=\"cases-container mat-elevation-z8\">\n  <!-- <h2>Covid 19 Cases</h2> -->\n  <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n    <mat-spinner></mat-spinner>\n  </div>\n  <!-- <div class=\"button-row\">\n    <a mat-flat-button color=\"primary\" [routerLink]=\"['/cases-add']\"><mat-icon>add</mat-icon>Cases</a>\n\n    <a mat-flat-button color=\"accent\" [routerLink]=\"['/stats']\"><mat-icon>bar_chart</mat-icon>Stats</a>\n  </div> -->\n  <div class=\"mat-elevation-z8\">\n    <div class=\"button-row\">\n      <a mat-flat-button color=\"primary\" [routerLink]=\"['/cases-add']\"><mat-icon>add</mat-icon>Cases</a>\n\n      <!-- <a mat-flat-button color=\"accent\" [routerLink]=\"['/stats']\"><mat-icon>bar_chart</mat-icon>Stats</a> -->\n    </div>\n    <table mat-table [dataSource]=\"data\" class=\"cases-table-container\" matSort matSortActive=\"first_name\" matSortDisableClear matSortDirection=\"asc\">\n\n      <ng-container matColumnDef=\"_id\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row._id}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"first_name\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.first_name}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"last_name\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.last_name}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"gender\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Gender</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.gender}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"age\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Age</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.age}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"email\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"country\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Country</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.country}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.status}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\" class=\"flex-item\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" [routerLink]=\"['/cases-edit', row._id]\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n          </button>\n          <!-- <button mat-icon-button matTooltip=\"Click to Delete\" class=\"iconbutton\" color=\"warn\">\n              <mat-icon aria-label=\"Delete\">delete</mat-icon>\n          </button> -->\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onRowClicked(row)\"></tr>\n    </table>\n    <mat-paginator #paginator\n      [length]=\"data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"50\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\n  </mat-paginator>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<div class=\"grid-container\">\n  <!-- <h1 class=\"mat-h1\">Dashboard</h1> -->\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide:boolean = true;\n  addressForm = this.fb.group({\n    username: [null, Validators.required],\n    password: [null, Validators.required]\n  })\n\n  constructor(private fb: FormBuilder, private router: Router, private flashMessageService: FlashMessagesService, public matSnackBar: MatSnackBar, private authService: AuthService) {}\n\n  ngOnInit(): void {\n\n  }\n\n  onLoginSubmit() {\n    //console.log(this.addressForm.value.password);\n    const user = {\n      username: this.addressForm.value.username,\n      password: this.addressForm.value.password\n    }\n\n    // Login User\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        // Provide some type of success message for good UX\n        console.log('success')\n        this.router.navigate(['dashboard']).then(() => {\n          this.matSnackBar.open('You are logged in.','OK', {\n            duration: 3000,\n          })\n        })\n      } else {\n        // Provide some type of error message for good UX\n        this.matSnackBar.open('There was a problem with your login.','OK', {\n          duration: 3000,\n        })\n        console.log('error')\n        //this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","<div class=\"login-container\">\n  <form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onLoginSubmit()\">\n    <mat-card class=\"shipping-card\">\n      <mat-card-header>\n        <mat-card-title style=\"margin-left: -15px;\">Coronavirus Patient Tracker System</mat-card-title>\n        <mat-card-subtitle style=\"margin-left: -15px;\">Sign In</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <!-- <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"Company\" formControlName=\"company\">\n            </mat-form-field>\n          </div>\n        </div> -->\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n              <input matInput placeholder=\"Username\" formControlName=\"username\" [(ngModel)]=\"addressForm.value.username\">\n              <mat-error *ngIf=\"addressForm.controls['username'].hasError('required')\">\n                A username is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n              <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Password\" formControlName=\"password\" [(ngModel)]=\"addressForm.value.password\">\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n              <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n                Your password is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Sign In</button>\n        <p class=\"loginCredentials\"><b>Username</b>: admin&nbsp;&nbsp;<b>Password</b>: admin</p>\n      </mat-card-actions>\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <p class=\"signup\" mat-line>Don't have an Account? <a [routerLink]=\"['/register']\" href=\"#\">Sign Up</a></p>\n      </mat-card-content>\n    </mat-card>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  user: any;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService, private router: Router,) {}\n\n  ngOnInit(): void{\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    })\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar *ngIf=\"user\">Hello, {{ user.name }}!</mat-toolbar>\n    <mat-nav-list>\n      <!-- <a mat-list-item [routerLink]=\"['/']\">Home</a> -->\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/profile']\">Profile</a>\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/cases']\">Cases</a>\n      <!-- <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/cases-add']\">Cases-Add</a>\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/cases-edit']\">Cases Edit</a>\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" [routerLink]=\"['/cases-details']\">Cases Details</a> -->\n      <a mat-list-item *ngIf=\"!authService.loggedIn()\" [routerLink]=\"['/login']\">Login</a>\n      <a mat-list-item *ngIf=\"!authService.loggedIn()\" [routerLink]=\"['/register']\">Register</a>\n      <a mat-list-item *ngIf=\"authService.loggedIn()\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"title\">Coronavirus Tracker</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    //console.log('ngOnInit works')\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    })\n  }\n}\n","<!-- <div class=\"profile-container\">\n  <mat-list *ngIf=\"user\">\n    <h2> {{ user.name }} </h2>\n    <mat-divider></mat-divider>\n    <mat-list-item> Username: {{ user.username }} </mat-list-item>\n    <mat-divider></mat-divider>\n    <mat-list-item> Email: {{ user.email }} </mat-list-item>\n   </mat-list>\n</div> -->\n<div class=\"covid-card\">\n  <mat-card class=\"example-card\" *ngIf=\"user\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{ user.name }}</mat-card-title>\n      <mat-card-subtitle>Title: System Admin</mat-card-subtitle>\n    </mat-card-header>\n    <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\n    <mat-card-content>\n      <p>\n        Username: {{ user.username }}\n      </p>\n      <p>\n        Email: {{ user.email }}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component, OnInit} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  addressForm = this.fb.group({\n    name: [null, Validators.required],\n    username: [null, Validators.required],\n    email: [null, Validators.required],\n    password: [null, Validators.required]\n  });\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.addressForm.value.name,\n      username: this.addressForm.value.username,\n      email: this.addressForm.value.email,\n      password: this.addressForm.value.password\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success) {\n        // Provide some type of success message for good UX\n        console.log('success')\n        this.router.navigate(['/login']);\n      } else {\n        // Provide some type of error message for good UX\n        console.log('error')\n        this.router.navigate(['/register']);\n      }\n    });\n    //console.log(user.name, user.email, user.username, user.password);\n  }\n}\n","<div class=\"register-container\">\n  <form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onRegisterSubmit()\">\n    <mat-card class=\"shipping-card\">\n      <mat-card-header>\n        <mat-card-title>User Registration</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"Name\" formControlName=\"name\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"Username\" formControlName=\"username\">\n              <mat-error *ngIf=\"addressForm.controls['username'].hasError('required')\">\n                Username is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"Email\" formControlName=\"email\">\n              <mat-error *ngIf=\"addressForm.controls['email'].hasError('required')\">\n                Email is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"Password\" formControlName=\"password\">\n              <mat-error *ngIf=\"addressForm.controls['password'].hasError('required')\">\n                Password is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n\n\n        <!-- <div class=\"row\">\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <input matInput placeholder=\"City\" formControlName=\"city\">\n              <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\n                City is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col\">\n            <mat-form-field class=\"full-width\">\n              <mat-select placeholder=\"State\" formControlName=\"state\">\n                <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                  {{ state.name }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\n                State is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div> -->\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n      </mat-card-actions>\n    </mat-card>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public authService: AuthService, private router: Router){}\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  registerUser(user): Observable<any> {\n    let httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    // return this.http.post<any>('http://localhost:3200/users/register', user, httpOptions);\n    return this.http.post<any>('users/register', user, httpOptions);\n  }\n\n  authenticateUser(user): Observable<any> {\n    let httpOptions = { headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }) };\n    // return this.http.post<any>('http://localhost:3200/users/authenticate', user, httpOptions);\n    return this.http.post<any>('users/authenticate', user, httpOptions);\n  }\n\n  getProfile(): Observable<any> {\n    this.loadToken();\n    let httpOptions = { headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.authToken\n    }) };\n    // return this.http.get<any>('http://localhost:3200/users/profile', httpOptions);\n    return this.http.get<any>('users/profile', httpOptions);\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    const token: any = localStorage.getItem('id_token');\n    if(token == null || token == undefined) {\n      this.jwtHelper.isTokenExpired()\n      return false;\n    } else {\n      !this.jwtHelper.isTokenExpired()\n      return true;\n    }\n\n    // if(this.authToken != null){return true;}\n    // else{return false;}\n\n    //   if (localStorage.id_token == undefined ){\n    //    console.log('Hello');\n    //    return false\n    //   } else {\n    //   console.log('Goodbye');\n    // const helper = new JwtHelperService();\n    // console.log(helper.isTokenExpired(localStorage.id_token));\n    //   return helper.isTokenExpired(localStorage.id_token); // other people are putting 'id_token'' here but it didn't work for me so i just put the localStorage item\n    //   }\n   }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, from } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { Cases } from '../cases';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n// const apiUrl = 'http://localhost:3200/cases'\nconst apiUrl = 'cases'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaseApiService {\n  data: Cases[] = [];\n\n  constructor(private httpClient:HttpClient) { }\n\n  // Error Handling\n  private handleError<T> (operation = 'operation', result?:T) {\n    return (error:any): Observable<T> => {\n      console.log(error);\n      return of(result as T);\n    }\n  }\n\n  // Get All Cases\n  // getCases(_id:string, filter = '', sortOrder = 'asc', pageNumber = 0, pageSize = 3): Observable<Cases[]> {\n  //   return this.httpClient.get<Cases[]>(`${apiUrl}`, {\n  //     params: new HttpParams()\n  //       .set('_id', _id.toString())\n  //       .set('filter', filter)\n  //       .set('sortOrder', sortOrder)\n  //       .set('pageNumber', pageNumber.toString())\n  //       .set('pageSize', pageSize.toString())\n  //   }).pipe(\n  //     map(res => res['payload'])\n  //   );\n  // }\n\n  getCases(): Observable<Cases[]> {\n    return this.httpClient.get<Cases[]>(`${apiUrl}`)\n      .pipe(\n        tap(cases => console.log('fetched cases')),\n        catchError(this.handleError('getCases', []))\n      )\n  }\n\n  // Get a Single Case\n  getCase(id): Observable<Cases> {\n    const url = `${apiUrl}/${id}`;\n    return this.httpClient.get<Cases>(url);\n  }\n\n  // Add a Case\n  addCase(cases: Cases): Observable<Cases> {\n    return this.httpClient.post<Cases>(`${apiUrl}`, cases, httpOptions);\n  }\n\n  // Update a Case\n  updateCase(id: string,cases: Cases): Observable<any> {\n    const url = `${apiUrl}/${id}`\n    return this.httpClient.put<Cases>(url, cases, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // Delete a Case\n  deleteCase(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.httpClient.delete<Cases>(url,httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}